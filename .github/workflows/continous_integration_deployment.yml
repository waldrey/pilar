name: Continuous Integration & Deployment

on:
  push:

jobs:
  pipeline_development:
    name: Pipeline Development
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Install Poetry
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.8.3


      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Dependencies Poentry
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Code Quality [LINT]
        uses: chartboost/ruff-action@v1

      - name: Code Quality [PYTEST]
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: true
          job-summary: true
          custom-pytest: 'poetry run pytest'
          click-to-expand: true
          report-title: 'Test Report'
  deploy:
    name: Pipeline Deployment
    runs-on: 'ubuntu-latest'
    needs: pipeline_development

    steps:
     # Implementing AWS Deploy using ECS